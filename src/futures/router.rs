
enum Router {
    UsdtM(Futures),
    CoinM(Futures),
}

pub fn usdt_m_router(f :Futures) -> String {
    String::from(Router::UsdtM(f))
}

pub fn coin_m_router(f :Futures) -> String {
    String::from(Router::CoinM(f))
}

#[derive(Debug,Clone)]
pub enum Futures {
    Ping,
    Time,
    ExchangeInfo,
    Depth,
    Trades,
    HistoricalTrades,
    AggTrades,
    Klines,
    ContinuousKlines,
    IndexPriceKlines,
    MarkPriceKlines,
    PremiumIndex,
    FundingRate,
    Ticker24hr,
    TickerPrice,
    BookTicker,
    AllForceOrders,
    AllOpenOrders,
    AllOrders,
    UserTrades,
    Order,
    PositionRisk,
    LeverageBracket,
    Balance,
    PositionSide,
    OpenInterest,
    OpenInterestHist,
    TopLongShortAccountRatio,
    TopLongShortPositionRatio,
    GlobalLongShortAccountRatio,
    TakerlongshortRatio,
    LvtKlines,
    IndexInfo,
    ChangeInitialLeverage,
    Account,
    OpenOrders,
    UserDataStream,
    Income,
}

impl From<Router> for String {
    fn from(item: Router) -> Self {
        String::from(match item {
            Router::UsdtM(route) => match route {
                Futures::Ping => "/fapi/v1/ping",
                Futures::Time => "/fapi/v1/time",
                Futures::ExchangeInfo => "/fapi/v1/exchangeInfo",
                Futures::Depth => "/fapi/v1/depth",
                Futures::Trades => "/fapi/v1/trades",
                Futures::HistoricalTrades => "/fapi/v1/historicalTrades",
                Futures::AggTrades => "/fapi/v1/aggTrades",
                Futures::Klines => "/fapi/v1/klines",
                Futures::ContinuousKlines => "/fapi/v1/continuousKlines",
                Futures::IndexPriceKlines => "/fapi/v1/indexPriceKlines",
                Futures::MarkPriceKlines => "/fapi/v1/markPriceKlines",
                Futures::PremiumIndex => "/fapi/v1/premiumIndex",
                Futures::FundingRate => "/fapi/v1/fundingRate",
                Futures::Ticker24hr => "/fapi/v1/ticker/24hr",
                Futures::TickerPrice => "/fapi/v1/ticker/price",
                Futures::BookTicker => "/fapi/v1/ticker/bookTicker",
                Futures::AllForceOrders => "/fapi/v1/allForceOrders",
                Futures::AllOpenOrders => "/fapi/v1/allOpenOrders",
                Futures::AllOrders => "/fapi/v1/allOrders",
                Futures::UserTrades => "/fapi/v1/userTrades",
                Futures::PositionSide => "/fapi/v1/positionSide/dual",
                Futures::Order => "/fapi/v1/order",
                Futures::PositionRisk => "/fapi/v2/positionRisk",
                Futures::LeverageBracket => "/fapi/v1/leverageBracket",
                Futures::Balance => "/fapi/v2/balance",
                Futures::OpenInterest => "/fapi/v1/openInterest",
                Futures::OpenInterestHist => "/futures/data/openInterestHist",
                Futures::TopLongShortAccountRatio => "/futures/data/topLongShortAccountRatio",
                Futures::TopLongShortPositionRatio => "/futures/data/topLongShortPositionRatio",
                Futures::GlobalLongShortAccountRatio => "/futures/data/globalLongShortAccountRatio",
                Futures::TakerlongshortRatio => "/futures/data/takerlongshortRatio",
                Futures::LvtKlines => "/fapi/v1/lvtKlines",
                Futures::IndexInfo => "/fapi/v1/indexInfo",
                Futures::ChangeInitialLeverage => "/fapi/v1/leverage",
                Futures::Account => "/fapi/v2/account",
                Futures::OpenOrders => "/fapi/v1/openOrders",
                Futures::UserDataStream => "/fapi/v1/listenKey",
                Futures::Income => "/fapi/v1/income",
            },
            Router::CoinM(route) => match route {
                Futures::Ping => "/dapi/v1/ping",
                Futures::Time => "/dapi/v1/time",
                Futures::ExchangeInfo => "/dapi/v1/exchangeInfo",
                Futures::Depth => "/dapi/v1/depth",
                Futures::Trades => "/dapi/v1/trades",
                Futures::HistoricalTrades => "/dapi/v1/historicalTrades",
                Futures::AggTrades => "/dapi/v1/aggTrades",
                Futures::Klines => "/dapi/v1/klines",
                Futures::ContinuousKlines => "/dapi/v1/continuousKlines",
                Futures::IndexPriceKlines => "/dapi/v1/indexPriceKlines",
                Futures::MarkPriceKlines => "/dapi/v1/markPriceKlines",
                Futures::PremiumIndex => "/dapi/v1/premiumIndex",
                Futures::FundingRate => "/dapi/v1/fundingRate",
                Futures::Ticker24hr => "/dapi/v1/ticker/24hr",
                Futures::TickerPrice => "/dapi/v1/ticker/price",
                Futures::BookTicker => "/dapi/v1/ticker/bookTicker",
                Futures::AllForceOrders => "/dapi/v1/allForceOrders",
                Futures::AllOpenOrders => "/dapi/v1/allOpenOrders",
                Futures::AllOrders => "/dapi/v1/allOrders",
                Futures::UserTrades => "/dapi/v1/userTrades",
                Futures::PositionSide => "/dapi/v1/positionSide/dual",
                Futures::Order => "/dapi/v1/order",
                Futures::PositionRisk => "/dapi/v1/positionRisk",
                Futures::LeverageBracket => "/dapi/v2/leverageBracket",
                Futures::Balance => "/dapi/v1/balance",
                Futures::OpenInterest => "/dapi/v1/openInterest",
                Futures::OpenInterestHist => "/futures/data/openInterestHist",
                Futures::TopLongShortAccountRatio => "/futures/data/topLongShortAccountRatio",
                Futures::TopLongShortPositionRatio => "/futures/data/topLongShortPositionRatio",
                Futures::GlobalLongShortAccountRatio => "/futures/data/globalLongShortAccountRatio",
                Futures::TakerlongshortRatio => "null",
                Futures::LvtKlines => "null",
                Futures::IndexInfo => "null",
                Futures::ChangeInitialLeverage => "/dapi/v1/leverage",
                Futures::Account => "/dapi/v1/account",
                Futures::OpenOrders => "/dapi/v1/openOrders",
                Futures::UserDataStream => "/dapi/v1/listenKey",
                Futures::Income => "/dapi/v1/income",
            }
        })
    }
}